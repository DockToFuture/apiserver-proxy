load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "iptables",
    srcs = [
        "doc.go",
        "iptables.go",
        "iptables_linux.go",
        "iptables_unsupported.go",
        "save_restore.go",
    ],
    importpath = "github.com/gardener/apiserver-proxy/internal/iptables",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/k8s.io/apimachinery/pkg/util/sets",
        "//vendor/k8s.io/apimachinery/pkg/util/version",
        "//vendor/k8s.io/apimachinery/pkg/util/wait",
        "//vendor/k8s.io/klog/v2:klog",
        "//vendor/k8s.io/utils/exec",
        "//vendor/k8s.io/utils/trace",
    ] + select({
        "@io_bazel_rules_go//go/platform:android": [
            "//vendor/golang.org/x/sys/unix",
            "//vendor/k8s.io/apimachinery/pkg/util/errors",
        ],
        "@io_bazel_rules_go//go/platform:linux": [
            "//vendor/golang.org/x/sys/unix",
            "//vendor/k8s.io/apimachinery/pkg/util/errors",
        ],
        "//conditions:default": [],
    }),
)

go_test(
    name = "iptables_test",
    srcs = [
        "iptables_test.go",
        "monitor_test.go",
        "save_restore_test.go",
    ],
    embed = [":iptables"],
    deps = select({
        "@io_bazel_rules_go//go/platform:android": [
            "//vendor/k8s.io/apimachinery/pkg/util/sets",
            "//vendor/k8s.io/apimachinery/pkg/util/version",
            "//vendor/k8s.io/apimachinery/pkg/util/wait",
            "//vendor/k8s.io/utils/exec",
            "//vendor/k8s.io/utils/exec/testing",
        ],
        "@io_bazel_rules_go//go/platform:linux": [
            "//vendor/k8s.io/apimachinery/pkg/util/sets",
            "//vendor/k8s.io/apimachinery/pkg/util/version",
            "//vendor/k8s.io/apimachinery/pkg/util/wait",
            "//vendor/k8s.io/utils/exec",
            "//vendor/k8s.io/utils/exec/testing",
        ],
        "//conditions:default": [],
    }),
)
