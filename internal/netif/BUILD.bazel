load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
load("@com_github_jmhodges_bazel_gomock//:gomock.bzl", "gomock")

# gazelle:exclude mocks_gen_test.go
go_library(
    name = "go_default_library",
    srcs = ["netif.go"],
    importpath = "github.com/gardener/apiserver-proxy/internal/netif",
    visibility = ["//visibility:public"],
    deps = [
        "@com_github_vishvananda_netlink//:go_default_library",
        "@io_k8s_klog//:go_default_library",
        "@org_golang_x_xerrors//:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = [
        "mocks_test.go",
        "netif_suite_test.go",
    ],
    embed = [":go_default_library"],
    deps = [
        "@com_github_golang_mock//gomock:go_default_library",
        "@com_github_onsi_ginkgo//:go_default_library",
        "@com_github_onsi_gomega//:go_default_library",
        "@com_github_vishvananda_netlink//:go_default_library",
    ],
)

# the file is generated via bazel, but linked via symlink to make the dev
# lifecycle easier. The symlink must have a different name and be ignored by
# gazelle.
# ln -s ../../bazel-bin/internal/netif/mocks_test.go mocks_gen_test.go
gomock(
    name = "mock",
    out = "mocks_test.go",
    interfaces = [
        "Handle",
    ],
    library = "go_default_library",
    package = "netif",
)
