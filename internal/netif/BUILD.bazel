load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
# load("@com_github_jmhodges_bazel_gomock//:gomock.bzl", "gomock")

# gazelle:exclude mocks_gen_test.go
go_library(
    name = "netif",
    srcs = ["netif.go"],
    importpath = "github.com/gardener/apiserver-proxy/internal/netif",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/vishvananda/netlink",
        "//vendor/golang.org/x/xerrors",
        "//vendor/k8s.io/klog/v2:klog",
    ],
)

go_test(
    name = "netif_test",
    srcs = [
        "mocks_test.go",
        "netif_suite_test.go",
    ],
    embed = [":netif"],
    deps = [
        "//vendor/github.com/golang/mock/gomock",
        "//vendor/github.com/onsi/ginkgo",
        "//vendor/github.com/onsi/gomega",
        "//vendor/github.com/vishvananda/netlink",
    ],
)

# the file is generated via bazel, but linked via symlink to make the dev
# lifecycle easier. The symlink must have a different name and be ignored by
# gazelle.
# ln -s ../../bazel-bin/internal/netif/mocks_test.go mocks_test.go.go
# mockgen -source netif.go -destination mocks_test.go -package netif Handle
# gomock(
#     name = "mock",
#     out = "mocks.go",
#     interfaces = [
#         "Handle",
#     ],
#     library = "netif",
#     package = "netif",
# )
